#! /usr/bin/env python

import sys

word_dict = dict()
dict_file = "merged.tsv"

try:
    with open(dict_file, 'r') as f:
        for line in f:
            l = line.split()
            # word_dict[int(l[0])] = l[1:]
            word_dict[l[0]] = l[1:]
except:
    print("Something went wrong loading %s." % dict_file)
    sys.exit(1)

if (len(sys.argv) < 2):
    print("""
Usage:
    %s [roll-outcome] [...]
    
    roll-outcome is a five-digit number generated by rolling five six-sided
    dice. Roll as many numbers as you need. The idea is to generate strong
    passwords by rolling dice and picking one of the three words generated,
    then combining them (in order) into a phrase. Sprinkle in punctuation and
    capital latters as you please.

Example:
    %s 13131 55425 butts 41421 31164 42115
    
Output:
    13131 - axiom  awl backyard
    55425 - stormy stan    spherical
    *** butts not found in list
    41421 - manna  mae motive
    31164 - gland  gibbs   flatworm
    42115 - mesa   md  nearly

    From that you can form the phrase "Backyard Stan motive: flatworm mesa."
    It's a fairly strong password.
""" % (sys.argv[0], sys.argv[0]))


# for a in [31164,51215,66556,16632,56316,41421]:
for a in sys.argv[1:]:
    try:
        outcome = "\t".join(word_dict[a])
        print("%s - %s" % (a, outcome))
    except KeyError:
        print("*** %s not found in list" % a)
